
<div id="key_new_modal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">

        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title">Create New Keyboard</h4>
      </div>
      <div class="modal-body">

        <%= form_for new_keyboard, url: {action:'create', controller:'/keyboard'}, html: {class: 'new_keyboard_form'},remote: true do |f| %>

            <div class="row">
                <div class="col-xs-14">
                    <%= f.text_field :name, class: "form-control", :placeholder => "Keyboard Name"  %>
                </div>
            </div>
            <% #languages_array = ISO::Language.all %>
            <% #languages_array = LanguageList::COMMON_LANGUAGES
               languages_array = get_languages

            %>


            <div class="row">
              <div class="col-xs-7">
                ISO <b>LANGUAGE</b> Code
              </div>
              <div class="col-xs-7">
		   <input type="text" name="auto-lang" id="auto-lang" data-autocomplete-source = "<%= KeyboardLanguages.order(:lc).map{|p| "#{p.lc}-#{p.ln}"} %>" required>
                   
		   <%= f.hidden_field :iso_language %>
              </div>
            </div>
            <% #countries_array = Country.all
               #countries_array = LangRegion::all_regions
               countries_array = get_regions
            %>
            <div class="row">
              <div class="col-xs-7">
                ISO <b>REGION</b> Code
              </div>
              <div class="col-xs-7">
                <input type="text" name="auto-region" id="auto-region" readonly="readonly">
		<%= f.hidden_field :iso_region %>
              </div>
            </div>

            <div class="row">
              <div class="col-xs-7">
                Keyboard Type
              </div>
              <div class="col-xs-7">
                <%= select_tag "keyboard_type_id", options_from_collection_for_select_with_data(KeyboardType.all, :id, :name,
                                                       nil, {:icon => :icon_class} ), class: "form-control selectpicker" %>
              </div>
            </div>

            <div class="row">
              <div class="col-xs-7">
                Load another keyboard
              </div>
              <div class="col-xs-7">
                <%= select_tag "load_another_keyboard", nil, class: "js-example-responsive refer_keyboard" , data: {initvalue: Keyboard.select(:id,:name)}, include_blank: true %>
              </div>
            </div>
        <% end %>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary new-keyboard-save" >Go</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
