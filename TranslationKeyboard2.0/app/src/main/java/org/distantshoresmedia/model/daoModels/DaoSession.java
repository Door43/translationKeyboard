package org.distantshoresmedia.model.daoModels;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import org.distantshoresmedia.model.daoModels.AvailableKeyboard;
import org.distantshoresmedia.model.daoModels.BaseKeyboard;
import org.distantshoresmedia.model.daoModels.KeyboardVariant;
import org.distantshoresmedia.model.daoModels.KeyPosition;
import org.distantshoresmedia.model.daoModels.KeyCharacter;

import org.distantshoresmedia.model.daoModels.AvailableKeyboardDao;
import org.distantshoresmedia.model.daoModels.BaseKeyboardDao;
import org.distantshoresmedia.model.daoModels.KeyboardVariantDao;
import org.distantshoresmedia.model.daoModels.KeyPositionDao;
import org.distantshoresmedia.model.daoModels.KeyCharacterDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig availableKeyboardDaoConfig;
    private final DaoConfig baseKeyboardDaoConfig;
    private final DaoConfig keyboardVariantDaoConfig;
    private final DaoConfig keyPositionDaoConfig;
    private final DaoConfig keyCharacterDaoConfig;

    private final AvailableKeyboardDao availableKeyboardDao;
    private final BaseKeyboardDao baseKeyboardDao;
    private final KeyboardVariantDao keyboardVariantDao;
    private final KeyPositionDao keyPositionDao;
    private final KeyCharacterDao keyCharacterDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        availableKeyboardDaoConfig = daoConfigMap.get(AvailableKeyboardDao.class).clone();
        availableKeyboardDaoConfig.initIdentityScope(type);

        baseKeyboardDaoConfig = daoConfigMap.get(BaseKeyboardDao.class).clone();
        baseKeyboardDaoConfig.initIdentityScope(type);

        keyboardVariantDaoConfig = daoConfigMap.get(KeyboardVariantDao.class).clone();
        keyboardVariantDaoConfig.initIdentityScope(type);

        keyPositionDaoConfig = daoConfigMap.get(KeyPositionDao.class).clone();
        keyPositionDaoConfig.initIdentityScope(type);

        keyCharacterDaoConfig = daoConfigMap.get(KeyCharacterDao.class).clone();
        keyCharacterDaoConfig.initIdentityScope(type);

        availableKeyboardDao = new AvailableKeyboardDao(availableKeyboardDaoConfig, this);
        baseKeyboardDao = new BaseKeyboardDao(baseKeyboardDaoConfig, this);
        keyboardVariantDao = new KeyboardVariantDao(keyboardVariantDaoConfig, this);
        keyPositionDao = new KeyPositionDao(keyPositionDaoConfig, this);
        keyCharacterDao = new KeyCharacterDao(keyCharacterDaoConfig, this);

        registerDao(AvailableKeyboard.class, availableKeyboardDao);
        registerDao(BaseKeyboard.class, baseKeyboardDao);
        registerDao(KeyboardVariant.class, keyboardVariantDao);
        registerDao(KeyPosition.class, keyPositionDao);
        registerDao(KeyCharacter.class, keyCharacterDao);
    }
    
    public void clear() {
        availableKeyboardDaoConfig.getIdentityScope().clear();
        baseKeyboardDaoConfig.getIdentityScope().clear();
        keyboardVariantDaoConfig.getIdentityScope().clear();
        keyPositionDaoConfig.getIdentityScope().clear();
        keyCharacterDaoConfig.getIdentityScope().clear();
    }

    public AvailableKeyboardDao getAvailableKeyboardDao() {
        return availableKeyboardDao;
    }

    public BaseKeyboardDao getBaseKeyboardDao() {
        return baseKeyboardDao;
    }

    public KeyboardVariantDao getKeyboardVariantDao() {
        return keyboardVariantDao;
    }

    public KeyPositionDao getKeyPositionDao() {
        return keyPositionDao;
    }

    public KeyCharacterDao getKeyCharacterDao() {
        return keyCharacterDao;
    }

}
