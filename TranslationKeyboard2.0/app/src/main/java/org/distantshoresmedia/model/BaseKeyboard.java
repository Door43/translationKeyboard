/* Generated by JavaFromJSON */
/*http://javafromjson.dashingrocket.com*/

package org.distantshoresmedia.model;


import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.Arrays;
import java.util.Date;

public class BaseKeyboard extends BaseDataClass{

    static final private String kUIDKey = "keyboard_id";
    static final private String kKeyboardNameKey = "keyboard_name";
    static final private String kCreatedKey = "created_at";
    static final private String kUpdatedKey = "updated_at";
    static final private String kIsoRegionKey = "iso_region";
    static final private String kIsoLanguageKey = "iso_language";
    static final private String kKeybaordVariantKey = "keyboard_variants";

    private String Name;
    public void setName(String name) {
        this.Name = name;
    }
    public String getName() {
        return Name;
    }

    private String createdAt;
    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }
    public String getCreatedAt() {
        return createdAt;
    }

    private String isoRegion;
    public void setIsoRegion(String isoRegion) {
        this.isoRegion = isoRegion;
    }
    public String getIsoRegion() {
        return isoRegion;
    }

	private String isoLanguage;
 	public void setIsoLanguage(String isoLanguage) {
		this.isoLanguage = isoLanguage;
	}
	public String getIsoLanguage() {
		return isoLanguage;
	}

	private KeyboardVariant[] keyboardVariants;
 	public void setKeyboardVariants(KeyboardVariant[] keyboardVariants) {
		this.keyboardVariants = keyboardVariants;
	}
	public KeyboardVariant[] getKeyboardVariants() {
		return keyboardVariants;
	}


    public BaseKeyboard(long id, String name, String created, double updated, String isoRegion, String isoLanguage, KeyboardVariant[] variants){
        super(id, updated);
        this.Name = name;
        this.createdAt = created;
        this.isoRegion = isoRegion;
        this.isoLanguage = isoLanguage;
        this.keyboardVariants = variants;
    }

    static public Long getKeyboardIDFromJSONString(String json){

        try {
            JSONObject jObject = new JSONObject(json);
            long name = jObject.getLong(kUIDKey);

            return name;
        }
        catch (JSONException e){
            System.out.println("getKeyboardNameFromJSONString JSONException: " + e.toString() + "json: " + json);
        }

        return null;
    }

    static public String getKeyboardNameFromJSONString(String json){

        try {
            JSONObject jObject = new JSONObject(json);
            String name = jObject.getString(kKeyboardNameKey);

            return name;
        }
        catch (JSONException e){
            System.out.println("getKeyboardNameFromJSONString JSONException: " + e.toString() + "json: " + json);
        }

        return null;
    }

    static public BaseKeyboard getKeyboardFromJsonObject(JSONObject jsonObj){

        System.out.println("Got to BaseKeyboard");
        try {
            int id = jsonObj.getInt(kUIDKey);
            String name = jsonObj.getString(kKeyboardNameKey);
            String created = jsonObj.getString(kCreatedKey);
            double updated = jsonObj.getDouble(kUpdatedKey);
            String isoRegion = jsonObj.getString(kIsoRegionKey);
            String isoLanguage = jsonObj.getString(kIsoLanguageKey);

            JSONArray rows = jsonObj.getJSONArray(kKeybaordVariantKey);
            KeyboardVariant[] variants = new KeyboardVariant[rows.length()];

            for(int i = 0; i < rows.length(); i++) {
                JSONObject rowObj = rows.getJSONObject(i);

                variants[i] = KeyboardVariant.getKeyboardFromJsonObject(rowObj);
            }

            BaseKeyboard keyboard = new BaseKeyboard(id, name, created, updated, isoRegion, isoLanguage, variants);

            return  keyboard;
        }

        catch (JSONException e) {
            System.out.println("BaseKeyboard JSONException: " + e.toString());
            return null;
        }
    }

    @Override
    public String toString() {
        return "BaseKeyboard{" +
                "Id=" + id +
                ", Name='" + Name + '\'' +
                ", createdAt=" + createdAt +
                ", updatedAt=" + updated +
                ", isoRegion='" + isoRegion + '\'' +
                ", isoLanguage='" + isoLanguage + '\'' +
                ", keyboardVariants=" + Arrays.toString(keyboardVariants) +
                '}';
    }
}