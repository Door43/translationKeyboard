/* Generated by JavaFromJSON */
/*http://javafromjson.dashingrocket.com*/

package org.distantshoresmedia.model;


import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class BaseKeyboard {

    final private String kUIDKey = "keyboard_id";
    final private String kKeyboardNameKey = "keyboard_name";
    final private String kCreatedKey = "created_at";
    final private String kUpdatedKey = "updated_at";
    final private String kIsoRegionKey = "iso_region";
    final private String kIsoLanguageKey = "iso_language";
    final private String kKeybaordVariantKey = "keyboard_variants";


    private Integer keyboardId;
    public void setKeyboardId(Integer keyboardId) {
        this.keyboardId = keyboardId;
    }
    public Integer getKeyboardId() {
        return keyboardId;
    }

    private String keyboardName;
    public void setKeyboardName(String keyboardName) {
        this.keyboardName = keyboardName;
    }
    public String getKeyboardName() {
        return keyboardName;
    }

    private Integer createdAt;
    public void setCreatedAt(Integer createdAt) {
        this.createdAt = createdAt;
    }
    public Integer getCreatedAt() {
        return createdAt;
    }

    private Integer updatedAt;
    public void setUpdatedAt(Integer updatedAt) {
        this.updatedAt = updatedAt;
    }
    public Integer getUpdatedAt() {
        return updatedAt;
    }

    private String isoRegion;
    public void setIsoRegion(String isoRegion) {
        this.isoRegion = isoRegion;
    }
    public String getIsoRegion() {
        return isoRegion;
    }

	private String isoLanguage;
 	public void setIsoLanguage(String isoLanguage) {
		this.isoLanguage = isoLanguage;
	}
	public String getIsoLanguage() {
		return isoLanguage;
	}

	private KeyboardVariant[] keyboardVariants;
 	public void setKeyboardVariants(KeyboardVariant[] keyboardVariants) {
		this.keyboardVariants = keyboardVariants;
	}
	public KeyboardVariant[] getKeyboardVariants() {
		return keyboardVariants;
	}


    public BaseKeyboard(Integer id, String name, Integer created, Integer updated, String isoRegion, String isoLanguage, KeyboardVariant[] variants){
        this.keyboardId = id;
        this.keyboardName = name;
        this.createdAt = created;
        this.updatedAt = updated;
        this.isoRegion = isoRegion;
        this.isoLanguage = isoLanguage;
        this.keyboardVariants = variants;
    }


    public BaseKeyboard getKeyboardFromJsonObject(JSONObject jsonObj){

        try {
            int id = jsonObj.getInt(kUIDKey);
            String name = jsonObj.getString(kKeyboardNameKey);
            int created = jsonObj.getInt(kCreatedKey);
            int updated = jsonObj.getInt(kUpdatedKey);
            String isoRegion = jsonObj.getString(kIsoRegionKey);
            String isoLanguage = jsonObj.getString(kIsoLanguageKey);

            JSONArray rows = jsonObj.getJSONArray(kKeybaordVariantKey);
            KeyboardVariant[] variants = new KeyboardVariant[rows.length()];

            for(int i = 0; i < rows.length(); i++) {
                JSONObject rowObj = rows.getJSONObject(i);

                variants[i] = KeyboardVariant.getKeyboardFromJsonObject(rowObj);
            }

            BaseKeyboard keyboard = new BaseKeyboard(id, name, created, updated, isoRegion, isoLanguage, variants);

            return  keyboard;
        }

        catch (JSONException e) {
            System.out.println("JSONException: " + e.toString());
            return null;
        }
    }
}