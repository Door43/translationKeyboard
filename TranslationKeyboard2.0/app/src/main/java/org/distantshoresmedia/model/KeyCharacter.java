/* Generated by JavaFromJSON */
/*http://javafromjson.dashingrocket.com*/

package org.distantshoresmedia.model;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.Arrays;

public class KeyCharacter {

    static final private String kModeMaskKey = "modmask";
    static final private String kUnicodeValue = "unicode";

    private Long id;
    public Long getId() {
        return id;
    }
    public void setId(Long id) {
        this.id = id;
    }

    private String name;
    public void setName(String name) {
        this.name = name;
    }
    public String getName() {
        return name;
    }

	private int[] unicodeValue;
 	public void setUnicodeValue(int[] unicodeValue) {
		this.unicodeValue = unicodeValue;
	}
	public int[] getUnicodeValue() {
		return unicodeValue;
	}

	private Integer modMask;
 	public void setModmask(int modMask) {
		this.modMask = modMask;
	}
	public Integer getModmask() {
		return modMask;
	}


    public KeyCharacter(Integer modMask, int[] unicodeValue){
        this.unicodeValue = unicodeValue;
        this.modMask = modMask;
    }

    public Integer[] getUnicodeAsIntegerObjects(){
        Integer[] integers = new Integer[unicodeValue.length];

        for(int i = 0; i < unicodeValue.length; i++){
            integers[i] = unicodeValue[i];
        }
        return integers;
    }


    static public KeyCharacter getCharacterFromJsonObject(JSONObject jsonObj){

        try {
            int mask = jsonObj.getInt(kModeMaskKey);
            JSONArray jsonHexes = jsonObj.getJSONArray(kUnicodeValue);
            int[] hexes = new int[jsonHexes.length()];

            for(int i = 0; i < jsonHexes.length(); i++){
                hexes[i] = (Integer) jsonHexes.get(i);
            }

            KeyCharacter newChar = new KeyCharacter(mask, hexes);
            return newChar;
        }

        catch (JSONException e) {
            System.out.println(" KeyCharacter JsonExcepetion; " + e.toString());
            return null;
        }
    }

    @Override
    public String toString() {
        return "KeyCharacter{" +
                ", id=" + id +
                ", name='" + name + '\'' +
                ", unicodeValue=" + Arrays.toString(unicodeValue) +
                ", modMask=" + modMask +
                '}';
    }
}